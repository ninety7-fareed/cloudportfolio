name: deploy_backend

on:
  push:
    branches: [ main ]
    paths:
    - 'backend/**'

env:
  AZURE_FUNCTIONAPP_NAME: 'GetPortfolioCounter97'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'backend'
  DOTNET_VERSION: '8.0.x'
  AZURE_RESOURCE_GROUP: 'YourResourceGroupName'  # Replace with your actual resource group name

jobs:
  build-and-deploy:
    runs-on: windows-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: pwsh
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/api'
        dotnet build --configuration Release --output ./output
        popd

    - name: 'Run unit tests'
      shell: pwsh
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/tests'
        dotnet test
        popd

    - name: 'List Azure Function Apps'
      shell: pwsh
      run: |
        az functionapp list --query "[].{name:name, resourceGroup:resourceGroup}" -o table

    - name: 'Check if Function App exists'
      id: check_function_app
      shell: pwsh
      run: |
        $exists = az functionapp show --name ${{ env.AZURE_FUNCTIONAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --query "name" -o tsv
        echo "Function app exists: $exists"
        echo "EXISTS=$exists" >> $env:GITHUB_OUTPUT

    - name: 'Create Azure Function App if not exists'
      if: steps.check_function_app.outputs.EXISTS != env.AZURE_FUNCTIONAPP_NAME
      shell: pwsh
      run: |
        az functionapp create --name ${{ env.AZURE_FUNCTIONAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --consumption-plan-location westus --runtime dotnet --functions-version 4

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/api/output'

    - name: 'Logout of Azure'
      run: |
        az logout
      if: always()